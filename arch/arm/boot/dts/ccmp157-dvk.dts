 /*
 * Copyright 2022, Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/dts-v1/;

/* STM32MP157 CPU */
#include "stm32mp157.dtsi"
#include "stm32mp15xa.dtsi"
#include "stm32mp15-pinctrl.dtsi"
#include "stm32mp15xxac-pinctrl.dtsi"
/* Digi ConnectCore CCMP15 */
#include "ccmp15.dtsi"
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "Digi International ConnectCore MP15 DVK.";
	compatible = "digi,ccmp15-dvk", "digi,ccmp15", "st,stm32mp157";
	digi,machine,name = "ccmp157-dvk";

	chosen {
		stdout-path = "serial0:115200n8";
	};

	display_bl: display-bl {
		compatible = "pwm-backlight";
		/* node TIM12_CH2 period (ns) */
		pwms = <&pwm12 1 500000 PWM_POLARITY_INVERTED>;
		brightness-levels = <0 16 22 30 40 55 75 102 138 188 255>;
		default-brightness-level = <8>;
		power-supply = <&v3v3>;
		status = "okay";
	};

	panel {
		compatible = "auo,g101evn010", "simple-panel";
		power-supply = <&v3v3>;
		backlight = <&display_bl>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&display_out>;
			};
		};
	};

	usb_phy_tuning: usb-phy-tuning {
		st,hs-dc-level = <2>;
		st,fs-rftime-tuning;
		st,hs-rftime-reduction;
		st,hs-current-trim = <15>;
		st,hs-impedance-trim = <1>;
		st,squelch-level = <3>;
		st,hs-rx-offset = <2>;
		st,no-lsfs-sc;
	};
};

/* Console */
&uart4 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&uart4_pins_a>;
	pinctrl-1 = <&uart4_sleep_pins_a>;
	pinctrl-2 = <&uart4_idle_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&cpu1{
	cpu-supply = <&vddcore>;
};

&gpu {
	contiguous-area = <&gpu_reserved>;
};

/* Micro SD */ 
&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a>;
	broken-cd;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	status = "okay";
};

&ethernet0 {
	status = "okay";
	pinctrl-0 = <&ethernet0_rmii_pins_a>;
	pinctrl-1 = <&ethernet0_rmii_sleep_pins_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rmii";
	max-speed = <100>;
	phy-handle = <&phy0>;
	local-mac-address = [00 04 F3 22 23 24];
	st,eth-ref-clk-sel = <1>;
	st,ext-phyclk = <1>;

	mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";

		phy0: ethernet-phy@0 {
			reg = <0>;
			compatible = "ethernet-phy-ieee802.3-c22";
			reset-gpios = <&gpioh 15 GPIO_ACTIVE_LOW>;
			reset-assert-us = <500>;
			smsc,disable-energy-detect;
			interrupt-parent = <&gpioi>;
			interrupts = <6 IRQ_TYPE_LEVEL_LOW>;
		};
	};
};

/* GigaBit network connection
&ethernet1 {
	status = "okay";
	pinctrl-0 = <&ethernet0_rgmii_pins_a>;
	pinctrl-1 = <&ethernet0_rgmii_sleep_pins_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0>;
	local-mac-address = [00 04 F3 22 23 24];

	mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy0: ethernet-phy@0 {
			reg = <0>;
		};
	};
};*/

&hash1 {
	status = "okay";
};

/* Connected to XBee some pins are shared with LTDC */
&usart3 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&ccmp15_usart3_pins>;
	pinctrl-1 = <&ccmp15_usart3_sleep_pins>;
	pinctrl-2 = <&ccmp15_usart3_idle_pins>;
	uart-has-rtscts;
	status = "okay";
};

&i2s2 {
	clocks = <&rcc SPI2>, <&rcc SPI2_K>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
	clock-names = "pclk", "i2sclk", "x8k", "x11k";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp15_i2s2_pins_a>;
	pinctrl-1 = <&ccmp15_i2s2_sleep_pins_a>;
	status = "disabled";

	i2s2_port: port {
		i2s2_endpoint: endpoint {
			// audio codec remote-endpoint = <&sii9022_tx_endpoint>;
			format = "i2s";
			mclk-fs = <256>;
		};
	};
};

&ltdc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp15_ltdc_pins>;
	pinctrl-1 = <&ccmp15_ltdc_sleep_pins>;
	status = "disabled";

	port {
		display_out: endpoint {
			remote-endpoint = <&panel_in>;
		};
	};
};

&dsi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "disabled";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			mipi_dsi_hdmi_out: endpoint {
				remote-endpoint = <&lt8912_1_in>;
			};
		};

/*		port@1 {
			reg = <1>;
			mipi_dsi_lvds_out: endpoint {
				remote-endpoint = <&bu90t82_1_in>;
			};
		};*/
	};

/*	bu90t82_1_in: panel-dsi@0 {
		reset-gpios = <&gpioa 8 GPIO_ACTIVE_LOW>;
		power-supply = <&v3v3>;
		status = "okay";

		port {
			dsi_panel_in: endpoint {
				remote-endpoint = <&mipi_dsi_lvds_out>;
			};
		};
	};*/
};

&spi4 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi4_pins_b>;
	pinctrl-1 = <&spi4_sleep_pins_b>;
	status = "disabled";
};

&timers12 {
        /delete-property/dmas;
        /delete-property/dma-names;
        status = "okay";
        pwm12: pwm {
                pinctrl-0 = <&ccmp15_pwm12_pins>;
                pinctrl-1 = <&ccmp15_pwm12_sleep_pins>;
                pinctrl-names = "default", "sleep";
                status = "okay";
        };
        timer@11 {
                status = "okay";
        };
};

&i2c2 {
	clock-frequency = <400000>;
	pinctrl-name = "default", "sleep";
	pinctrl-0 = <&i2c2_pins_a>;
	pinctrl-1 = <&i2c2_sleep_pins_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;

	lt_bridge: lt8912@48 {
		compatible = "lontium,lt8912";
		reg = <0x48>;
		reset-gpios = <&gpioa 9 GPIO_ACTIVE_LOW>;
		//hpd-gpios = <&gpioX X GPIO_ACTIVE_HIGH>;
		digi,dsi-lanes = <2>;
		vdd1-supply = <&vin>;
		no-edid;
		status = "okay";

		port {
			lt8912_1_in: endpoint {
				/* add lanes */
				remote-endpoint = <&mipi_dsi_hdmi_out>;
			};
		};
	};

	/* Touch */
	fusion_touch: fusion@14 {
                compatible = "touchrev,fusion-touch";
                reg = <0x14>;
                interrupt-parent = <&gpioc>;
                interrupts = <2 IRQ_TYPE_EDGE_RISING>;
		irq-gpios = <&gpioc 8 GPIO_ACTIVE_HIGH>;
                status = "disabled";
        };

	goodix_touch@14 {
		compatible = "goodix,gt9271";
		reg = <0x14>;
		interrupt-parent = <&gpioc>;
		interrupts = <8 IRQ_TYPE_EDGE_RISING>;
		status = "okay";
	};

	goodix_touch2@5d {
                compatible = "goodix,gt9271";
                reg = <0x5d>;
                //pinctrl-names = "default";
                //pinctrl-0 = <&ccmp15_goodix_touch>;
                interrupt-parent = <&gpioc>;
                interrupts = <8 IRQ_TYPE_EDGE_RISING>;
                irq-gpios = <&gpioc 8 GPIO_ACTIVE_HIGH>;
                status = "okay";
        };
};

&i2c6 {
	clock-frequency = <400000>;
	pinctrl-name = "default", "sleep";
	pinctrl-0 = <&i2c6_pins_a>;
	pinctrl-1 = <&i2c6_sleep_pins_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	status = "disabled";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&usbh_ehci {
	phys = <&usbphyc_port0>;
	phy-names = "usb";
	status = "okay";
};

&usbotg_hs {
	pinctrl-0 = <&usbotg_hs_pins_a>;
	pinctrl-names = "default";
	phy-names = "usb2-phy";
	phys = <&usbphyc_port1 0>;
	status = "okay";
	vbus-supply = <&vbus_otg>;
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&usbphyc_port1 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&dcmi {
	status = "disabled";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp15_dcmi_pins_a>;
	pinctrl-1 = <&ccmp15_dcmi_sleep_pins_a>;

	port {
		dcmi_0: endpoint {
			//remote-endpoint = <&ov5640_0>;
			bus-type = <5>;
			bus-width = <8>;
			hsync-active = <0>;
			vsync-active = <0>;
			pclk-sample = <1>;
			pclk-max-frequency = <24000000>;
		};
	};
};

&pinctrl {
	ccmp15_usart3_pins: usart3-1 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, AF7)>, /* USART3_TX */
				 <STM32_PINMUX('G', 8, AF8)>; /* USART3_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 12, AF8)>, /* USART3_RX */
				 <STM32_PINMUX('B', 13, AF7)>; /* USART3_CTS_NSS */
			bias-pull-up;
		};
	};

	ccmp15_usart3_idle_pins: usart3-idle-1 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
				 <STM32_PINMUX('B', 13, ANALOG)>; /* USART3_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 8, AF8)>; /* USART3_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins3 {
			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
			bias-pull-up;
		};
	};

	ccmp15_usart3_sleep_pins: usart3-sleep-1 {
		pins {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
				 <STM32_PINMUX('G', 8, ANALOG)>, /* USART3_RTS */
				 <STM32_PINMUX('B', 13, ANALOG)>, /* USART3_CTS_NSS */
				 <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
		};
	};

	ccmp15_ltdc_pins: ltdc-0 {
		pins {
			pinmux = <STM32_PINMUX('G',  7, AF14)>, /* LCD_CLK */
				 <STM32_PINMUX('I', 10, AF14)>, /* LCD_HSYNC */
				 <STM32_PINMUX('I',  9, AF14)>, /* LCD_VSYNC */
				 <STM32_PINMUX('F', 10, AF14)>, /* LCD_DE */
				 <STM32_PINMUX('H',  2, AF14)>, /* LCD_R0 */
				 <STM32_PINMUX('H',  3, AF14)>, /* LCD_R1 */
				 <STM32_PINMUX('H',  8, AF14)>, /* LCD_R2 */
				 <STM32_PINMUX('B',  0, AF9)>, /* LCD_R3 */
				 <STM32_PINMUX('A',  5, AF14)>, /* LCD_R4 */
				 <STM32_PINMUX('C',  0, AF14)>, /* LCD_R5 */
				 <STM32_PINMUX('H', 12, AF14)>, /* LCD_R6 */
				 <STM32_PINMUX('E', 15, AF14)>, /* LCD_R7 */
				 <STM32_PINMUX('B',  1, AF14)>, /* LCD_G0 */
				 <STM32_PINMUX('E',  6, AF14)>, /* LCD_G1 */
				 <STM32_PINMUX('H', 13, AF14)>, /* LCD_G2 */
				 <STM32_PINMUX('G', 10, AF9)>, /* LCD_G3 */
				 <STM32_PINMUX('H', 15, AF14)>, /* LCD_G4 */
				 <STM32_PINMUX('F', 11, AF14)>, /* LCD_G5 */
				 <STM32_PINMUX('I', 11, AF9)>, /* LCD_G6 */
				 <STM32_PINMUX('B',  5, AF14)>, /* LCD_G7 */
				 <STM32_PINMUX('E',  4, AF14)>, /* LCD_B0 */
				 <STM32_PINMUX('G', 12, AF14)>, /* LCD_B1 */
				 <STM32_PINMUX('A',  3, AF9)>, /* LCD_B2 */
				 <STM32_PINMUX('D', 10, AF14)>, /* LCD_B3 */
				 <STM32_PINMUX('I',  4, AF14)>, /* LCD_B4 */
				 <STM32_PINMUX('I',  5, AF14)>, /* LCD_B5 */
				 <STM32_PINMUX('I',  6, AF14)>, /* LCD_B6 */
				 <STM32_PINMUX('I',  7, AF14)>; /* LCD_B7 */
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	ccmp15_ltdc_sleep_pins: ltdc-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G',  7, ANALOG)>, /* LCD_CLK */
				 <STM32_PINMUX('I', 10, ANALOG)>, /* LCD_HSYNC */
				 <STM32_PINMUX('I',  9, ANALOG)>, /* LCD_VSYNC */
				 <STM32_PINMUX('F', 10, ANALOG)>, /* LCD_DE */
				 <STM32_PINMUX('H',  2, ANALOG)>, /* LCD_R0 */
				 <STM32_PINMUX('H',  3, ANALOG)>, /* LCD_R1 */
				 <STM32_PINMUX('H',  8, ANALOG)>, /* LCD_R2 */
				 <STM32_PINMUX('B',  0, ANALOG)>, /* LCD_R3 */
				 <STM32_PINMUX('A',  5, ANALOG)>, /* LCD_R4 */
				 <STM32_PINMUX('C',  0, ANALOG)>, /* LCD_R5 */
				 <STM32_PINMUX('H', 12, ANALOG)>, /* LCD_R6 */
				 <STM32_PINMUX('E', 15, ANALOG)>, /* LCD_R7 */
				 <STM32_PINMUX('B',  1, ANALOG)>, /* LCD_G0 */
				 <STM32_PINMUX('E',  6, ANALOG)>, /* LCD_G1 */
				 <STM32_PINMUX('H', 13, ANALOG)>, /* LCD_G2 */
				 <STM32_PINMUX('G', 10, ANALOG)>, /* LCD_G3 */
				 <STM32_PINMUX('H', 15, ANALOG)>, /* LCD_G4 */
				 <STM32_PINMUX('F', 11, ANALOG)>, /* LCD_G5 */
				 <STM32_PINMUX('I', 11, ANALOG)>, /* LCD_G6 */
				 <STM32_PINMUX('B',  5, ANALOG)>, /* LCD_G7 */
				 <STM32_PINMUX('E',  4, ANALOG)>, /* LCD_B0 */
				 <STM32_PINMUX('G', 12, ANALOG)>, /* LCD_B1 */
				 <STM32_PINMUX('A',  3, ANALOG)>, /* LCD_B2 */
				 <STM32_PINMUX('D', 10, ANALOG)>, /* LCD_B3 */
				 <STM32_PINMUX('I',  4, ANALOG)>, /* LCD_B4 */
				 <STM32_PINMUX('I',  5, ANALOG)>, /* LCD_B5 */
				 <STM32_PINMUX('I',  6, ANALOG)>, /* LCD_B6 */
				 <STM32_PINMUX('I',  7, ANALOG)>; /* LCD_B7 */
		};
	};

	ccmp15_i2s2_pins_a: i2s2-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 3, AF5)>, /* I2S2_SDO */
				 <STM32_PINMUX('I', 2, AF5)>, /* I2S2_SDI */
				 <STM32_PINMUX('I', 0, AF5)>, /* I2S2_WS */
				 <STM32_PINMUX('C', 6, AF5)>, /* I2S2_MCK */
				 <STM32_PINMUX('I', 1, AF5)>; /* I2S2_CK */
			slew-rate = <1>;
			drive-push-pull;
			bias-disable;
		};
	};

	ccmp15_i2s2_sleep_pins_a: i2s2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 3, ANALOG)>, /* I2S2_SDO */
				 <STM32_PINMUX('I', 2, ANALOG)>, /* I2S2_SDI */
				 <STM32_PINMUX('I', 0, ANALOG)>, /* I2S2_WS */
				 <STM32_PINMUX('C', 6, ANALOG)>, /* I2S2_MCK */
				 <STM32_PINMUX('I', 1, ANALOG)>; /* I2S2_CK */
		};
	};

	ccmp15_dcmi_pins_a: dcmi-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 9,  AF13)>,/* DCMI_HSYNC */
				 <STM32_PINMUX('B', 7,  AF13)>,/* DCMI_VSYNC */
				 <STM32_PINMUX('A', 6,  AF13)>,/* DCMI_PIXCLK */
				 <STM32_PINMUX('H', 9,  AF13)>,/* DCMI_D0 */
				 <STM32_PINMUX('H', 10, AF13)>,/* DCMI_D1 */
				 <STM32_PINMUX('H', 11, AF13)>,/* DCMI_D2 */
				 <STM32_PINMUX('E',  1, AF13)>,/* DCMI_D3 */
				 <STM32_PINMUX('H', 14, AF13)>,/* DCMI_D4 */
				 <STM32_PINMUX('D', 3,  AF13)>,/* DCMI_D5 */
				 <STM32_PINMUX('B', 8,  AF13)>,/* DCMI_D6 */
				 <STM32_PINMUX('B', 9,  AF13)>;/* DCMI_D7 */
			bias-disable;
		};
	};

	ccmp15_dcmi_sleep_pins_a: dcmi-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('H', 8,  ANALOG)>,/* DCMI_HSYNC */
				 <STM32_PINMUX('B', 7,  ANALOG)>,/* DCMI_VSYNC */
				 <STM32_PINMUX('A', 6,  ANALOG)>,/* DCMI_PIXCLK */
				 <STM32_PINMUX('H', 9,  ANALOG)>,/* DCMI_D0 */
				 <STM32_PINMUX('H', 10, ANALOG)>,/* DCMI_D1 */
				 <STM32_PINMUX('H', 11, ANALOG)>,/* DCMI_D2 */
				 <STM32_PINMUX('E',  1, ANALOG)>,/* DCMI_D3 */
				 <STM32_PINMUX('H', 14, ANALOG)>,/* DCMI_D4 */
				 <STM32_PINMUX('D', 3,  ANALOG)>,/* DCMI_D5 */
				 <STM32_PINMUX('B', 8,  ANALOG)>,/* DCMI_D6 */
				 <STM32_PINMUX('B', 9,  ANALOG)>;/* DCMI_D7 */
		};
	};

	ccmp15_pwm12_pins: pwm12-0 {
                pins {
                        pinmux = <STM32_PINMUX('H', 9, AF2)>; /* TIM12_CH2 */
                        bias-pull-down;
                        drive-push-pull;
                        slew-rate = <0>;
                };
        };

        ccmp15_pwm12_sleep_pins: pwm12-sleep-0 {
                pins {
                        pinmux = <STM32_PINMUX('H', 9, ANALOG)>; /* TIM12_CH2 */
                };
        };
};

&pinctrl_z {
	i2c6_pins_a: i2c6-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 0, AF6)>, /* I2C6_SCL */
				 <STM32_PINMUX('Z', 3, AF6)>; /* I2C6_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	i2c6_sleep_pins_a: i2c6-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* I2C6_SCL */
				 <STM32_PINMUX('Z', 3, ANALOG)>; /* I2C6_SDA */
		};
	};
};
